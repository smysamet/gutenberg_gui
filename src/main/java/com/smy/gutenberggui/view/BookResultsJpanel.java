package com.smy.gutenberggui.view;

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sam
 */
public class BookResultsJpanel extends javax.swing.JPanel {

    private MainFrame mainFrame;
    private List<Object> tableData;

    public List<Object> getTableData() {
        return tableData;
    }

    public void setTableData(List<Object> tableData) {
        this.tableData = tableData;

        DefaultTableModel model = (DefaultTableModel) this.kitapTable.getModel();

        model.setRowCount(0);

        for (int i = 0; i < tableData.size() - 3; i += 4) {
            Object[] arr = {tableData.get(i), tableData.get(i + 1), tableData.get(i + 2), tableData.get(i + 3)};
            model.addRow(arr);
        }
    }

    /**
     * Creates new form SearchBookForm
     */
    public BookResultsJpanel(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        //((DefaultTableModel)this.kitapTable.getModel());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        kitapTable = new javax.swing.JTable();
        geriButton = new javax.swing.JToggleButton();
        okuButton = new javax.swing.JToggleButton();

        setMaximumSize(new java.awt.Dimension(650, 630));
        setMinimumSize(new java.awt.Dimension(650, 630));

        kitapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Etext-No", "Author", "Title", "Language"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kitapTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(kitapTable);
        if (kitapTable.getColumnModel().getColumnCount() > 0) {
            kitapTable.getColumnModel().getColumn(0).setResizable(false);
            kitapTable.getColumnModel().getColumn(1).setResizable(false);
            kitapTable.getColumnModel().getColumn(2).setResizable(false);
            kitapTable.getColumnModel().getColumn(3).setResizable(false);
        }

        geriButton.setText("Geri");
        geriButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriButtonActionPerformed(evt);
            }
        });

        okuButton.setText("Oku");
        okuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(543, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(okuButton)
                    .addComponent(geriButton))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addGap(60, 60, 60)
                .addComponent(okuButton)
                .addGap(18, 18, 18)
                .addComponent(geriButton)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void geriButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geriButtonActionPerformed
        // TODO add your handling code here:
        this.mainFrame.getCardLayout().show(this.mainFrame.getMainPanel(), "bookSearchJpanel");
    }//GEN-LAST:event_geriButtonActionPerformed

    private void okuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okuButtonActionPerformed
        BookViewJframe temp;
        // check if a row selected
        if (this.kitapTable.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null,
                    "Lütfen bir kitap seçin.",
                    "Kitap Seçilmedi",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        // get the etext no from selected row
        String etext_no = Integer.toString((int) this.kitapTable.getValueAt(this.kitapTable.getSelectedRow(), 0));

        try {
            
            temp = new BookViewJframe(etext_no, this.mainFrame);
            temp.setLocationRelativeTo(null);
            temp.setVisible(true);
            this.mainFrame.setVisible(false);
            // set books scrollbar position
            temp.setPosition(0);
        } catch (IOException ex) {
            Logger.getLogger(BookResultsJpanel.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_okuButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton geriButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable kitapTable;
    private javax.swing.JToggleButton okuButton;
    // End of variables declaration//GEN-END:variables
}
